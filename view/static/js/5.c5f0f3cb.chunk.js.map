{"version":3,"sources":["Components/AppliedJobs/style.module.css","Components/AppliedJobs/DeletePost.jsx","Components/AppliedJobs/page.jsx"],"names":["module","exports","DeletePost","props","isOpen","onRequestClose","contentLabel","deleteJob","setAllJobs","React","createElement","Fragment","ReactModal","className","style","deletePostContentClass","overlayClassName","modalOverlayClass","confirmation","buttonContainer","yes","onClick","async","res","axios","delete","concat","headers","JSON","parse","window","localStorage","getItem","toast","success","data","video","filter","item","_id","error","console","log","warn","response","no","ToastContainer","theme","autoClose","hideProgressBar","setAppElement","AppliedJobs","allJobs","useState","deleteModal","setDeleteModal","setdeleteJob","checked","useTheme","useEffect","get","stringify","newFilters","search","getJobs","jobs","map","index","key","title","color","description","user","location","email","container","salary","experience","jobType","workMode","MdDelete","openModal","id","document","body","overflow"],"mappings":"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","file":"static/js/5.c5f0f3cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deletePostContentClass\":\"style_deletePostContentClass__2onSn\",\"modalOverlayClass\":\"style_modalOverlayClass__onWV8\",\"jobs\":\"style_jobs__2392n\",\"empty\":\"style_empty__2mPS-\",\"title\":\"style_title__1vnFO\",\"description\":\"style_description__2MHuo\",\"user\":\"style_user__31ecV\",\"container\":\"style_container__2Bus7\",\"location\":\"style_location__2NtNn\",\"delete\":\"style_delete__12mKv\",\"confirmation\":\"style_confirmation__Sw-ca\",\"buttonContainer\":\"style_buttonContainer__9NKKQ\",\"yes\":\"style_yes__36BYB\",\"no\":\"style_no__j85iH\",\"loader\":\"style_loader__subpR\",\"apply\":\"style_apply__3pFhb\"};","import style from \"./style.module.css\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport ReactModal from \"react-modal\";\r\nReactModal.setAppElement('*');\r\n\r\nexport default function DeletePost(props)\r\n{\r\n    const { isOpen , onRequestClose , contentLabel , deleteJob , setAllJobs } = props;\r\n\r\n    async function deleteJobPost()\r\n    {\r\n        try\r\n        {\r\n            const res = await axios.delete(`/api/deleteAppliedJob/${deleteJob}` ,\r\n            {\r\n                headers : {\r\n                    \"auth-token\" : JSON.parse(window.localStorage.getItem(\"auth-token\"))[\"authToken\"]\r\n                }\r\n            });\r\n            toast.success(res.data);\r\n            setAllJobs(video => (video.filter((item)=>{\r\n                return item._id!==deleteJob\r\n            })))\r\n            onRequestClose();\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            toast.warn(error.response.data);\r\n        }\r\n    }\r\n    return <>\r\n        <ReactModal\r\n            isOpen={isOpen}\r\n            onRequestClose={onRequestClose}\r\n            contentLabel={contentLabel}\r\n            className={style.deletePostContentClass}\r\n            overlayClassName={style.modalOverlayClass}\r\n        >\r\n            <div className={style.confirmation}>Are you surely want to delete the post ?</div>\r\n            <div className={style.buttonContainer}>\r\n                <button className={style.yes} onClick={deleteJobPost}>Yes</button>\r\n                <button className={style.no} onClick={onRequestClose}>No</button>\r\n            </div>\r\n        </ReactModal>\r\n        <ToastContainer theme=\"colored\" autoClose={4000} hideProgressBar={true} />\r\n    </>\r\n}","import axios from \"axios\";\r\nimport React , { useState , useEffect } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport { useTheme } from \"../../Context/ThemeContext\";\r\n\r\nimport style from \"./style.module.css\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function AppliedJobs(props)\r\n{\r\n    const [allJobs, setAllJobs] = useState([]);\r\n    const [deleteModal , setDeleteModal] = useState(false);\r\n    const [deleteJob , setdeleteJob] = useState(null);\r\n\r\n    const { checked } = useTheme();\r\n\r\n    function openModal(id)\r\n    {\r\n        setDeleteModal(true);\r\n        setdeleteJob(id);\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    function closeModal()\r\n    {\r\n        setDeleteModal(false);\r\n        setdeleteJob(null);\r\n        document.body.style.overflow = 'auto';\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getJobs()\r\n        {\r\n            try\r\n            {\r\n                const res = await axios.get(\"/api/getAppliedJobs\" ,\r\n                {\r\n                    headers : {\r\n                        \"auth-token\" : JSON.parse(window.localStorage.getItem(\"auth-token\"))[\"authToken\"],\r\n                        \"filters\" : JSON.stringify(props.newFilters),\r\n                        \"search\" : props.search\r\n                    }\r\n                })\r\n                setAllJobs(res.data);\r\n            }\r\n            catch(error)\r\n            {\r\n                console.log(error);\r\n                toast.warn(error.response.data);\r\n            }\r\n        }\r\n        getJobs()\r\n    },[props.newFilters , props.search])\r\n\r\n    return <><div className={style.jobs}>\r\n        {allJobs.map((item , index) => {\r\n            return <div key={index}>\r\n                <div className={style.title} style={{color : checked ? \"white\" : \"black\"}}>{item.title}</div>\r\n                <div className={style.description} style={{color : checked ? \"aquamarine\" : \"#e22020\"}}>{item.description}</div>\r\n                <div className={style.user} style={{color : checked ? \"pink\" : \"#df56e4\"}}><span>Posted by</span> : {item.user}</div>\r\n                <div className={style.location} style={{color : checked ? \"wheat\" : \"#9824d1\"}}>{item.email}</div>\r\n                <div className={style.container} style={{color : checked ? \"yellow\" : \"#1da159\"}}>\r\n                    <div className={style.salary}><span>Salary</span> : {item.salary} &#8377;</div>\r\n                    <div className={style.experience}><span>Past experience</span> : {item.experience} {item.experience > 1 ? 'years' : 'year'}</div>\r\n                </div>\r\n                <div className={style.container} style={{color : checked ? \"yellow\" : \"#1da159\"}}>\r\n                    <div className={style.jobType}><span>Job type</span> : {item.jobType}</div>\r\n                    <div className={style.workMode}><span>Work mode</span> : {item.workMode}</div>\r\n                </div>\r\n                <div className={style.location} style={{color : checked ? \"wheat\" : \"#9824d1\"}}>{item.location}</div>\r\n                <MdDelete className={style.delete} onClick={()=>openModal(item._id)} />\r\n            </div>\r\n        })}\r\n    </div>\r\n    <ToastContainer theme=\"colored\" autoClose={4000} hideProgressBar={true} />\r\n    <DeletePost isOpen={deleteModal} onRequestClose={closeModal} contentLabel=\"Example Modal\" deleteJob={deleteJob} setAllJobs={setAllJobs}/>\r\n    </>\r\n}"],"sourceRoot":""}
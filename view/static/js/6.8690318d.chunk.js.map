{"version":3,"sources":["Components/Videos/style.module.css","Components/Videos/index.jsx"],"names":["module","exports","Videos","props","video","manageVideos","useState","useEffect","async","res","axios","get","data","error","console","log","toast","warn","response","getallImages","headers","search","searchVideos","checked","useTheme","React","createElement","className","style","body","map","item","index","Link","key","videoDiv","color","to","concat","id","onClick","patch","videoId","err","updateViews","thumbnail","src","imageDataUrl","alt","creator","createrName","title","views","ToastContainer","theme","autoClose","hideProgressBar"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,UAAY,yBAAyB,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,uB,gCCDxN,yHASe,SAASC,EAAOC,GAE7B,MAAOC,EAAOC,GAAgBC,mBAAS,IAkDvCC,oBAAU,MAhDVC,iBAEE,IAEE,MAAMC,QAAYC,IAAMC,IAAI,kBAC5BN,EAAaI,EAAIG,MAEnB,MAAMC,GAEJC,QAAQC,IAAIF,GACZG,IAAMC,KAAKJ,EAAMK,SAASN,OAuC5BO,IACC,IAEHZ,oBAAU,MAtCVC,iBAEE,IAEE,MAAMC,QAAYC,IAAMC,IAAI,oBAC5B,CACES,QAAU,CACN,OAAWjB,EAAMkB,UAGpBZ,GAEDJ,EAAaI,EAAIG,MAGrB,MAAMC,GAEJC,QAAQC,IAAIF,GACZG,IAAMC,KAAKJ,EAAMK,SAASN,OAqB5BU,IACC,CAACnB,EAAMkB,SAEVd,oBAAU,KACRO,QAAQC,IAAI,cAAeX,IAC1B,CAACA,IACJ,MAAM,QAAEmB,GAAYC,cACpB,OACEC,IAAAC,cAAA,OAAKC,UAAWC,IAAMC,MACnBzB,EAAM0B,IAAI,CAACC,EAAOC,IACfP,IAAAC,cAACO,IAAI,CAACC,IAAKF,EAAOL,UAAWC,IAAMO,SAAUP,MAAO,CAACQ,MAAQb,EAAU,QAAU,SAAUc,GAAE,UAAAC,OAAYP,EAAKQ,IAAMC,QAASA,IA3BrIhC,eAA2B+B,GAEzB,UAEQ7B,IAAM+B,MAAM,mBAAqB,CAACC,QAAUH,IAEpD,MAAMI,GAEJ7B,QAAQC,IAAI4B,GACZ3B,IAAMC,KAAK0B,EAAIzB,SAASN,OAkB6GgC,CAAYb,EAAKQ,KAChJd,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAWC,IAAMiB,UAAWC,IAAKf,EAAKgB,aAAcC,IAAI,KAC7DvB,IAAAC,cAAA,OAAKC,UAAWC,IAAMqB,SAAUlB,EAAKmB,aACrCzB,IAAAC,cAAA,OAAKC,UAAWC,IAAMuB,OAAQpB,EAAKoB,OACnC1B,IAAAC,cAAA,OAAKC,UAAWC,IAAMwB,OAAQrB,EAAKqB,MAAM,IAAErB,EAAKqB,MAAM,EAAI,QAAU,WAI1E3B,IAAAC,cAAC2B,IAAc,CAACC,MAAM,UAAUC,UAAW,IAAMC,iBAAiB","file":"static/js/6.8690318d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"style_body__95B79\",\"empty\":\"style_empty__3axU3\",\"videoDiv\":\"style_videoDiv__3ilDP\",\"thumbnail\":\"style_thumbnail__2sPgr\",\"creator\":\"style_creator__1HPA4\",\"title\":\"style_title__4gln-\",\"views\":\"style_views__2UOn2\"};","import axios from \"axios\";\r\nimport React , { useState, useEffect } from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from '../../Context/ThemeContext';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Videos(props)\r\n{\r\n  const [video, manageVideos] = useState([]);\r\n\r\n  async function getallImages()\r\n  {\r\n    try\r\n    {\r\n      const res = await axios.get(\"/api/allImages\");\r\n      manageVideos(res.data);\r\n    }\r\n    catch(error)\r\n    {\r\n      console.log(error);\r\n      toast.warn(error.response.data)\r\n    }\r\n  }\r\n\r\n  async function searchVideos()\r\n  {\r\n    try\r\n    {\r\n      const res = await axios.get(\"/api/searchVideos\" ,\r\n      {\r\n        headers : {\r\n            \"search\" : props.search\r\n        }\r\n      });\r\n      if(res)\r\n      {\r\n        manageVideos(res.data);\r\n      }\r\n    }\r\n    catch(error)\r\n    {\r\n      console.log(error);\r\n      toast.warn(error.response.data)\r\n    }\r\n  }\r\n\r\n  async function updateViews(id)\r\n  {\r\n    try\r\n    {\r\n      await axios.patch(\"/api/updateViews\" , {videoId : id})\r\n    }\r\n    catch(err)\r\n    {\r\n      console.log(err);\r\n      toast.warn(err.response.data);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getallImages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    searchVideos();\r\n  }, [props.search]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Video Data:\", video);\r\n  }, [video]);\r\n  const { checked } = useTheme();\r\n  return (\r\n    <div className={style.body}>\r\n      {video.map((item , index) => (\r\n          <Link key={index} className={style.videoDiv} style={{color : checked ? \"white\" : \"black\"}} to={`Videos/${item.id}`} onClick={()=>updateViews(item.id)}>\r\n            <div>\r\n              <img className={style.thumbnail} src={item.imageDataUrl} alt=\"\"/>\r\n              <div className={style.creator}>{item.createrName}</div>\r\n              <div className={style.title}>{item.title}</div>\r\n              <div className={style.views}>{item.views} {item.views>1 ? 'views' : 'view'}</div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n        <ToastContainer theme=\"colored\" autoClose={4000} hideProgressBar={true} />\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"sourceRoot":""}